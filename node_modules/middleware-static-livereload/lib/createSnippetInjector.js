"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSnippetInjector = void 0;
const stream = require("stream");
const string_decoder_1 = require("string_decoder");
const createInserter_1 = require("./createInserter");
const createSnippetInjector = (options, injecteeSource) => {
    const injectee = Buffer.isBuffer(injecteeSource) ? injecteeSource : Buffer.from(injecteeSource);
    return Object.assign((readable) => {
        const stringDecoder = new string_decoder_1.StringDecoder(options.encoding);
        const insert = createInserter_1.createInserter(options);
        let done = false;
        const chunks = [];
        const injector = new stream.Transform({
            transform(chunk, _encoding, callback) {
                const string = stringDecoder.write(chunk);
                if (!done) {
                    const inserted = insert(string, injectee);
                    if (inserted) {
                        this.push(inserted);
                        chunks.push(inserted);
                        done = true;
                        callback();
                        return;
                    }
                }
                chunks.push(string);
                this.push(string);
                callback();
            },
            flush(callback) {
                let string = stringDecoder.end();
                if (string) {
                    process.stdout.write(`string: ${string}\n`);
                    string = (!done && insert(string, injectee)) || string;
                    chunks.push(string);
                    this.push(string);
                }
                callback();
            },
        });
        return readable.pipe(injector);
    }, { size: injectee.length });
};
exports.createSnippetInjector = createSnippetInjector;
